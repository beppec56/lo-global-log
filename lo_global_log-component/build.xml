<!--
    Copyright 2016 by Giuseppe Castagno giuseppe.castagno@acca-esse.it

    The Contents of this file are made available subject to
    the terms of European Union Public License (EUPL) version 1.1
    as published by the European Community.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the EUPL.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    EUPL for more details.

    You should have received a copy of the EUPL along with this
    program.  If not, see:
    https://www.osor.eu/eupl, http://ec.europa.eu/idabc/eupl.
-->

<!--
add comments here.........

ATTENTION:
the default target must be removed

-->
<project name="lo_global_log" default="build-jar" basedir=".">
	<property name="project_friendly_name" value="lo_global_log" />	
	<property name="project_name" value="${project_friendly_name}" />
	<property name="extension_jar_file" value="${project_name}.comp.jar" />
	<description>
        Build the jar file ${extension_jar_file} + ${extension_rdb_file}.
    </description>
	<echo>Build the jar file ${extension_jar_file}.</echo>
	<!-- set global properties for this build -->
	<!-- properties used when building/deploying the extension -->
	<!-- version used for updating the extension, displayed on LO interface and printed on the log files -->
	<property name="version" value="0.1.0" />
	<property name="longversion" value="${version}" />
	<property name="spec_version" value="1.0.0" />

	<!--
	grab option file for platform 
	platform file are:
	Linux: build.Linux-i386.properties
	-->
	<echo message="${project_name}: platform specific file is: build.${os.name}-${os.arch}.properties."/>
	<available file="build.${os.name}-${os.arch}.properties" type="file" property="properties_file.available" value="false" />
	<property file="build.${os.name}-${os.arch}.properties" />
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="build-eclipse" location="bin"/>
	<property name="dist" location="dist" />

	<!--
	 The variable lo_classes should be set in the Eclipse IDE, Ant variables, or in a
	 build.${os.name}-${os.arch}.properties file.
	 See README file in doc project.
	-->
	<property name="lo_classes" value="$lo_classes" />
	<echo>lo_classes: ${lo_classes}</echo>
	<available file="${lo_classes}" type="dir" property="lo_classes.available" value="false" />
	<fail message="No LO classes available. Please edit the file build.${os.name}-${os.arch}.properties to correct it.">
		<condition>
			<not>
				<isset property="lo_classes.available" />
			</not>
		</condition>
	</fail>

	<!-- directory to zip for archive -->
	<property name="archr" location="to-be-zipped" />
	<property name="arch" location="${archr}/${project_name}-${version}" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="Internal target: assemble the created class file into a Java archive (jar)">		
		<!-- Compile the java code from ${src} into ${build} -->
		<javac debug="true" target="1.7" srcdir="${src}" destdir="${build}" deprecation="true">
			<classpath>
				<pathelement path="${lo_classes}/juh.jar" />
				<pathelement path="${lo_classes}/jurt.jar" />
				<pathelement path="${lo_classes}/jut.jar" />
				<pathelement path="${lo_classes}/ridl.jar" />
				<pathelement path="${lo_classes}/unoil.jar" />
				<pathelement path="${basedir}/../lo_global_log-uno_types/dist/lib/lo_global_log.uno.jar" />
			</classpath>
			<compilerarg value="-Xlint:unchecked" />
		</javac>

	</target>

	<target name="build-jar" depends="compile" description="Default target: generate the distribution">
		<exec dir="." executable="${git_revision_script}"
	   		outputproperty="git.revision.number">
	   	</exec>
	   	<echo>${extension_jar_file} Git Revision Number ${git.revision.number}, version ${version}, spec version: ${spec_version}</echo>

		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib" />
		<!-- Put everything in ${build} into the .jar file -->
		<jar jarfile="${dist}/lib/${extension_jar_file}" basedir="${build}">
			<!-- build the manifest file on-line -->
			<manifest>
				<attribute name="Built-By" value="http://www.acca-esse.it" />
				<attribute name="Specification-Title" value="GlobalLogger Component" />
				<attribute name="Specification-Version" value="${spec_version}" />
				<attribute name="Specification-Vendor" value="http://www.acca-esse.it" />
				<attribute name="Implementation-Title" value="${project_name}" />
				<attribute name="Implementation-Version" value="${TODAY}, Vers. ${version}-${git.revision.number}" />
				<attribute name="Implementation-Vendor" value="http://www.acca-esse.it" />
				<attribute name="Ant-Version" value="${ant.version}" />
				<attribute name="UNO-Type-Path" value="" />
				<attribute name="RegistrationClassName" value="it.acca_esse.ext.lo_global_log.RegisterServices" />
				<attribute name="Class-Path" value="lo_global_log.uno.jar" />
			</manifest>
		</jar>

		<!-- create the component implementation jar -->
	
	</target>

	<!-- dependency of description.xml from build number -->
	<dependset>
		<srcfilelist dir="${basedir}" files="build.number" />
		<targetfilelist dir="${extension_dest_dir}" files="description.xml" />
	</dependset>

	<target name="clean" description="User target: clean up the project">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<echo>Executing clean</echo>
		<delete dir="${archr}" />
		<delete dir="${build-eclipse}" />
		<delete dir="${build}" />
		<delete dir="${dist}/lib/*" />
		<delete dir="${extension_dest_dir}" />
	</target>

	</project>
